#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Principal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSoft1")]
	public partial class dbCAJA : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCaja(Caja instance);
    partial void UpdateCaja(Caja instance);
    partial void DeleteCaja(Caja instance);
    partial void InsertCatCuentas(CatCuentas instance);
    partial void UpdateCatCuentas(CatCuentas instance);
    partial void DeleteCatCuentas(CatCuentas instance);
    partial void InsertCuentas(Cuentas instance);
    partial void UpdateCuentas(Cuentas instance);
    partial void DeleteCuentas(Cuentas instance);
    partial void InsertSOCIOS(SOCIOS instance);
    partial void UpdateSOCIOS(SOCIOS instance);
    partial void DeleteSOCIOS(SOCIOS instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public dbCAJA() : 
				base(global::Principal.Properties.Settings.Default.dbSoft1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbCAJA(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCAJA(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCAJA(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCAJA(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Caja> Caja
		{
			get
			{
				return this.GetTable<Caja>();
			}
		}
		
		public System.Data.Linq.Table<CatCuentas> CatCuentas
		{
			get
			{
				return this.GetTable<CatCuentas>();
			}
		}
		
		public System.Data.Linq.Table<Cuentas> Cuentas
		{
			get
			{
				return this.GetTable<Cuentas>();
			}
		}
		
		public System.Data.Linq.Table<SOCIOS> SOCIOS
		{
			get
			{
				return this.GetTable<SOCIOS>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<SociosV> SociosV
		{
			get
			{
				return this.GetTable<SociosV>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCuentas_Apertura")]
		public ISingleResult<spCuentas_AperturaResult> spCuentas_Apertura([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Idsocio", DbType="UniqueIdentifier")] System.Nullable<System.Guid> idsocio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCta", DbType="Int")] System.Nullable<int> idCta, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoApertura", DbType="Decimal(18,2)")] System.Nullable<decimal> montoApertura, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoUsuario", DbType="Int")] System.Nullable<int> noUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idsocio, idCta, montoApertura, noUsuario);
			return ((ISingleResult<spCuentas_AperturaResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.Caja")]
	public partial class Caja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NoMvto;
		
		private System.Guid _NoCuenta;
		
		private decimal _SaldoInicial;
		
		private decimal _Deposito;
		
		private decimal _Retiro;
		
		private System.Nullable<decimal> _SaldoFinal;
		
		private System.DateTime _FechaMvto;
		
		private int _NoUsuario;
		
		private EntityRef<Cuentas> _Cuentas;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoMvtoChanging(System.Guid value);
    partial void OnNoMvtoChanged();
    partial void OnNoCuentaChanging(System.Guid value);
    partial void OnNoCuentaChanged();
    partial void OnSaldoInicialChanging(decimal value);
    partial void OnSaldoInicialChanged();
    partial void OnDepositoChanging(decimal value);
    partial void OnDepositoChanged();
    partial void OnRetiroChanging(decimal value);
    partial void OnRetiroChanged();
    partial void OnSaldoFinalChanging(System.Nullable<decimal> value);
    partial void OnSaldoFinalChanged();
    partial void OnFechaMvtoChanging(System.DateTime value);
    partial void OnFechaMvtoChanged();
    partial void OnNoUsuarioChanging(int value);
    partial void OnNoUsuarioChanged();
    #endregion
		
		public Caja()
		{
			this._Cuentas = default(EntityRef<Cuentas>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoMvto", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NoMvto
		{
			get
			{
				return this._NoMvto;
			}
			set
			{
				if ((this._NoMvto != value))
				{
					this.OnNoMvtoChanging(value);
					this.SendPropertyChanging();
					this._NoMvto = value;
					this.SendPropertyChanged("NoMvto");
					this.OnNoMvtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoCuenta", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid NoCuenta
		{
			get
			{
				return this._NoCuenta;
			}
			set
			{
				if ((this._NoCuenta != value))
				{
					if (this._Cuentas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoCuentaChanging(value);
					this.SendPropertyChanging();
					this._NoCuenta = value;
					this.SendPropertyChanged("NoCuenta");
					this.OnNoCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaldoInicial", DbType="Decimal(18,2) NOT NULL")]
		public decimal SaldoInicial
		{
			get
			{
				return this._SaldoInicial;
			}
			set
			{
				if ((this._SaldoInicial != value))
				{
					this.OnSaldoInicialChanging(value);
					this.SendPropertyChanging();
					this._SaldoInicial = value;
					this.SendPropertyChanged("SaldoInicial");
					this.OnSaldoInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deposito", DbType="Decimal(18,2) NOT NULL")]
		public decimal Deposito
		{
			get
			{
				return this._Deposito;
			}
			set
			{
				if ((this._Deposito != value))
				{
					this.OnDepositoChanging(value);
					this.SendPropertyChanging();
					this._Deposito = value;
					this.SendPropertyChanged("Deposito");
					this.OnDepositoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retiro", DbType="Decimal(18,2) NOT NULL")]
		public decimal Retiro
		{
			get
			{
				return this._Retiro;
			}
			set
			{
				if ((this._Retiro != value))
				{
					this.OnRetiroChanging(value);
					this.SendPropertyChanging();
					this._Retiro = value;
					this.SendPropertyChanged("Retiro");
					this.OnRetiroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaldoFinal", AutoSync=AutoSync.Always, DbType="Decimal(20,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SaldoFinal
		{
			get
			{
				return this._SaldoFinal;
			}
			set
			{
				if ((this._SaldoFinal != value))
				{
					this.OnSaldoFinalChanging(value);
					this.SendPropertyChanging();
					this._SaldoFinal = value;
					this.SendPropertyChanged("SaldoFinal");
					this.OnSaldoFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaMvto", DbType="DateTime NOT NULL")]
		public System.DateTime FechaMvto
		{
			get
			{
				return this._FechaMvto;
			}
			set
			{
				if ((this._FechaMvto != value))
				{
					this.OnFechaMvtoChanging(value);
					this.SendPropertyChanging();
					this._FechaMvto = value;
					this.SendPropertyChanged("FechaMvto");
					this.OnFechaMvtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", DbType="Int NOT NULL")]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NoUsuario = value;
					this.SendPropertyChanged("NoUsuario");
					this.OnNoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuentas_Caja", Storage="_Cuentas", ThisKey="NoCuenta", OtherKey="NoCuenta", IsForeignKey=true)]
		public Cuentas Cuentas
		{
			get
			{
				return this._Cuentas.Entity;
			}
			set
			{
				Cuentas previousValue = this._Cuentas.Entity;
				if (((previousValue != value) 
							|| (this._Cuentas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cuentas.Entity = null;
						previousValue.Caja.Remove(this);
					}
					this._Cuentas.Entity = value;
					if ((value != null))
					{
						value.Caja.Add(this);
						this._NoCuenta = value.NoCuenta;
					}
					else
					{
						this._NoCuenta = default(System.Guid);
					}
					this.SendPropertyChanged("Cuentas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Caja", Storage="_Usuarios", ThisKey="NoUsuario", OtherKey="NoUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Caja.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Caja.Add(this);
						this._NoUsuario = value.NoUsuario;
					}
					else
					{
						this._NoUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.CatCuentas")]
	public partial class CatCuentas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCta;
		
		private string _TipoCuenta;
		
		private decimal _MontoMinimo;
		
		private decimal _TasaInteres;
		
		private byte _PlazoForsozo;
		
		private int _NoUsuario;
		
		private bool _Activo;
		
		private EntitySet<Cuentas> _Cuentas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCtaChanging(int value);
    partial void OnIdCtaChanged();
    partial void OnTipoCuentaChanging(string value);
    partial void OnTipoCuentaChanged();
    partial void OnMontoMinimoChanging(decimal value);
    partial void OnMontoMinimoChanged();
    partial void OnTasaInteresChanging(decimal value);
    partial void OnTasaInteresChanged();
    partial void OnPlazoForsozoChanging(byte value);
    partial void OnPlazoForsozoChanged();
    partial void OnNoUsuarioChanging(int value);
    partial void OnNoUsuarioChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public CatCuentas()
		{
			this._Cuentas = new EntitySet<Cuentas>(new Action<Cuentas>(this.attach_Cuentas), new Action<Cuentas>(this.detach_Cuentas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCta
		{
			get
			{
				return this._IdCta;
			}
			set
			{
				if ((this._IdCta != value))
				{
					this.OnIdCtaChanging(value);
					this.SendPropertyChanging();
					this._IdCta = value;
					this.SendPropertyChanged("IdCta");
					this.OnIdCtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoCuenta", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string TipoCuenta
		{
			get
			{
				return this._TipoCuenta;
			}
			set
			{
				if ((this._TipoCuenta != value))
				{
					this.OnTipoCuentaChanging(value);
					this.SendPropertyChanging();
					this._TipoCuenta = value;
					this.SendPropertyChanged("TipoCuenta");
					this.OnTipoCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoMinimo", DbType="Decimal(18,2) NOT NULL")]
		public decimal MontoMinimo
		{
			get
			{
				return this._MontoMinimo;
			}
			set
			{
				if ((this._MontoMinimo != value))
				{
					this.OnMontoMinimoChanging(value);
					this.SendPropertyChanging();
					this._MontoMinimo = value;
					this.SendPropertyChanged("MontoMinimo");
					this.OnMontoMinimoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TasaInteres", DbType="Decimal(18,2) NOT NULL")]
		public decimal TasaInteres
		{
			get
			{
				return this._TasaInteres;
			}
			set
			{
				if ((this._TasaInteres != value))
				{
					this.OnTasaInteresChanging(value);
					this.SendPropertyChanging();
					this._TasaInteres = value;
					this.SendPropertyChanged("TasaInteres");
					this.OnTasaInteresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlazoForsozo", DbType="TinyInt NOT NULL")]
		public byte PlazoForsozo
		{
			get
			{
				return this._PlazoForsozo;
			}
			set
			{
				if ((this._PlazoForsozo != value))
				{
					this.OnPlazoForsozoChanging(value);
					this.SendPropertyChanging();
					this._PlazoForsozo = value;
					this.SendPropertyChanged("PlazoForsozo");
					this.OnPlazoForsozoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", DbType="Int NOT NULL")]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					this.OnNoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NoUsuario = value;
					this.SendPropertyChanged("NoUsuario");
					this.OnNoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatCuentas_Cuentas", Storage="_Cuentas", ThisKey="IdCta", OtherKey="Idcta")]
		public EntitySet<Cuentas> Cuentas
		{
			get
			{
				return this._Cuentas;
			}
			set
			{
				this._Cuentas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.CatCuentas = this;
		}
		
		private void detach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.CatCuentas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.Cuentas")]
	public partial class Cuentas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NoCuenta;
		
		private System.Guid _Idsocio;
		
		private int _Idcta;
		
		private decimal _MontoApertura;
		
		private decimal _Depositos;
		
		private decimal _Retiros;
		
		private System.Nullable<decimal> _Saldo;
		
		private System.DateTime _FechaApertura;
		
		private int _NoUsuario;
		
		private EntitySet<Caja> _Caja;
		
		private EntityRef<CatCuentas> _CatCuentas;
		
		private EntityRef<SOCIOS> _SOCIOS;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoCuentaChanging(System.Guid value);
    partial void OnNoCuentaChanged();
    partial void OnIdsocioChanging(System.Guid value);
    partial void OnIdsocioChanged();
    partial void OnIdctaChanging(int value);
    partial void OnIdctaChanged();
    partial void OnMontoAperturaChanging(decimal value);
    partial void OnMontoAperturaChanged();
    partial void OnDepositosChanging(decimal value);
    partial void OnDepositosChanged();
    partial void OnRetirosChanging(decimal value);
    partial void OnRetirosChanged();
    partial void OnSaldoChanging(System.Nullable<decimal> value);
    partial void OnSaldoChanged();
    partial void OnFechaAperturaChanging(System.DateTime value);
    partial void OnFechaAperturaChanged();
    partial void OnNoUsuarioChanging(int value);
    partial void OnNoUsuarioChanged();
    #endregion
		
		public Cuentas()
		{
			this._Caja = new EntitySet<Caja>(new Action<Caja>(this.attach_Caja), new Action<Caja>(this.detach_Caja));
			this._CatCuentas = default(EntityRef<CatCuentas>);
			this._SOCIOS = default(EntityRef<SOCIOS>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoCuenta", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NoCuenta
		{
			get
			{
				return this._NoCuenta;
			}
			set
			{
				if ((this._NoCuenta != value))
				{
					this.OnNoCuentaChanging(value);
					this.SendPropertyChanging();
					this._NoCuenta = value;
					this.SendPropertyChanged("NoCuenta");
					this.OnNoCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idsocio", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Idsocio
		{
			get
			{
				return this._Idsocio;
			}
			set
			{
				if ((this._Idsocio != value))
				{
					if (this._SOCIOS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdsocioChanging(value);
					this.SendPropertyChanging();
					this._Idsocio = value;
					this.SendPropertyChanged("Idsocio");
					this.OnIdsocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idcta", DbType="Int NOT NULL")]
		public int Idcta
		{
			get
			{
				return this._Idcta;
			}
			set
			{
				if ((this._Idcta != value))
				{
					if (this._CatCuentas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdctaChanging(value);
					this.SendPropertyChanging();
					this._Idcta = value;
					this.SendPropertyChanged("Idcta");
					this.OnIdctaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoApertura", DbType="Decimal(18,0) NOT NULL")]
		public decimal MontoApertura
		{
			get
			{
				return this._MontoApertura;
			}
			set
			{
				if ((this._MontoApertura != value))
				{
					this.OnMontoAperturaChanging(value);
					this.SendPropertyChanging();
					this._MontoApertura = value;
					this.SendPropertyChanged("MontoApertura");
					this.OnMontoAperturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depositos", DbType="Decimal(18,2) NOT NULL")]
		public decimal Depositos
		{
			get
			{
				return this._Depositos;
			}
			set
			{
				if ((this._Depositos != value))
				{
					this.OnDepositosChanging(value);
					this.SendPropertyChanging();
					this._Depositos = value;
					this.SendPropertyChanged("Depositos");
					this.OnDepositosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retiros", DbType="Decimal(18,2) NOT NULL")]
		public decimal Retiros
		{
			get
			{
				return this._Retiros;
			}
			set
			{
				if ((this._Retiros != value))
				{
					this.OnRetirosChanging(value);
					this.SendPropertyChanging();
					this._Retiros = value;
					this.SendPropertyChanged("Retiros");
					this.OnRetirosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saldo", AutoSync=AutoSync.Always, DbType="Decimal(22,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Saldo
		{
			get
			{
				return this._Saldo;
			}
			set
			{
				if ((this._Saldo != value))
				{
					this.OnSaldoChanging(value);
					this.SendPropertyChanging();
					this._Saldo = value;
					this.SendPropertyChanged("Saldo");
					this.OnSaldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaApertura", DbType="DateTime NOT NULL")]
		public System.DateTime FechaApertura
		{
			get
			{
				return this._FechaApertura;
			}
			set
			{
				if ((this._FechaApertura != value))
				{
					this.OnFechaAperturaChanging(value);
					this.SendPropertyChanging();
					this._FechaApertura = value;
					this.SendPropertyChanged("FechaApertura");
					this.OnFechaAperturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", DbType="Int NOT NULL")]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NoUsuario = value;
					this.SendPropertyChanged("NoUsuario");
					this.OnNoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cuentas_Caja", Storage="_Caja", ThisKey="NoCuenta", OtherKey="NoCuenta")]
		public EntitySet<Caja> Caja
		{
			get
			{
				return this._Caja;
			}
			set
			{
				this._Caja.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatCuentas_Cuentas", Storage="_CatCuentas", ThisKey="Idcta", OtherKey="IdCta", IsForeignKey=true)]
		public CatCuentas CatCuentas
		{
			get
			{
				return this._CatCuentas.Entity;
			}
			set
			{
				CatCuentas previousValue = this._CatCuentas.Entity;
				if (((previousValue != value) 
							|| (this._CatCuentas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatCuentas.Entity = null;
						previousValue.Cuentas.Remove(this);
					}
					this._CatCuentas.Entity = value;
					if ((value != null))
					{
						value.Cuentas.Add(this);
						this._Idcta = value.IdCta;
					}
					else
					{
						this._Idcta = default(int);
					}
					this.SendPropertyChanged("CatCuentas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOCIOS_Cuentas", Storage="_SOCIOS", ThisKey="Idsocio", OtherKey="IdSocio", IsForeignKey=true)]
		public SOCIOS SOCIOS
		{
			get
			{
				return this._SOCIOS.Entity;
			}
			set
			{
				SOCIOS previousValue = this._SOCIOS.Entity;
				if (((previousValue != value) 
							|| (this._SOCIOS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SOCIOS.Entity = null;
						previousValue.Cuentas.Remove(this);
					}
					this._SOCIOS.Entity = value;
					if ((value != null))
					{
						value.Cuentas.Add(this);
						this._Idsocio = value.IdSocio;
					}
					else
					{
						this._Idsocio = default(System.Guid);
					}
					this.SendPropertyChanged("SOCIOS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Cuentas", Storage="_Usuarios", ThisKey="NoUsuario", OtherKey="NoUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Cuentas.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Cuentas.Add(this);
						this._NoUsuario = value.NoUsuario;
					}
					else
					{
						this._NoUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Cuentas = this;
		}
		
		private void detach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Cuentas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.SOCIOS")]
	public partial class SOCIOS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdSocio;
		
		private string _Socio;
		
		private string _Domicilio;
		
		private bool _Activo;
		
		private bool _BuroCredito;
		
		private int _NoUsuario;
		
		private string _RFC;
		
		private EntitySet<Cuentas> _Cuentas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSocioChanging(System.Guid value);
    partial void OnIdSocioChanged();
    partial void OnSocioChanging(string value);
    partial void OnSocioChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    partial void OnBuroCreditoChanging(bool value);
    partial void OnBuroCreditoChanged();
    partial void OnNoUsuarioChanging(int value);
    partial void OnNoUsuarioChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    #endregion
		
		public SOCIOS()
		{
			this._Cuentas = new EntitySet<Cuentas>(new Action<Cuentas>(this.attach_Cuentas), new Action<Cuentas>(this.detach_Cuentas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					this.OnIdSocioChanging(value);
					this.SendPropertyChanging();
					this._IdSocio = value;
					this.SendPropertyChanged("IdSocio");
					this.OnIdSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Socio", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Socio
		{
			get
			{
				return this._Socio;
			}
			set
			{
				if ((this._Socio != value))
				{
					this.OnSocioChanging(value);
					this.SendPropertyChanging();
					this._Socio = value;
					this.SendPropertyChanged("Socio");
					this.OnSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domicilio", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuroCredito", DbType="Bit NOT NULL")]
		public bool BuroCredito
		{
			get
			{
				return this._BuroCredito;
			}
			set
			{
				if ((this._BuroCredito != value))
				{
					this.OnBuroCreditoChanging(value);
					this.SendPropertyChanging();
					this._BuroCredito = value;
					this.SendPropertyChanged("BuroCredito");
					this.OnBuroCreditoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", DbType="Int NOT NULL")]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					this.OnNoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NoUsuario = value;
					this.SendPropertyChanged("NoUsuario");
					this.OnNoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SOCIOS_Cuentas", Storage="_Cuentas", ThisKey="IdSocio", OtherKey="Idsocio")]
		public EntitySet<Cuentas> Cuentas
		{
			get
			{
				return this._Cuentas;
			}
			set
			{
				this._Cuentas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.SOCIOS = this;
		}
		
		private void detach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.SOCIOS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoUsuario;
		
		private string _Usuario;
		
		private string _Contraseña;
		
		private bool _Activo;
		
		private EntitySet<Caja> _Caja;
		
		private EntitySet<Cuentas> _Cuentas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoUsuarioChanging(int value);
    partial void OnNoUsuarioChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public Usuarios()
		{
			this._Caja = new EntitySet<Caja>(new Action<Caja>(this.attach_Caja), new Action<Caja>(this.detach_Caja));
			this._Cuentas = new EntitySet<Cuentas>(new Action<Cuentas>(this.attach_Cuentas), new Action<Cuentas>(this.detach_Cuentas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					this.OnNoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NoUsuario = value;
					this.SendPropertyChanged("NoUsuario");
					this.OnNoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Caja", Storage="_Caja", ThisKey="NoUsuario", OtherKey="NoUsuario")]
		public EntitySet<Caja> Caja
		{
			get
			{
				return this._Caja;
			}
			set
			{
				this._Caja.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Cuentas", Storage="_Cuentas", ThisKey="NoUsuario", OtherKey="NoUsuario")]
		public EntitySet<Cuentas> Cuentas
		{
			get
			{
				return this._Cuentas;
			}
			set
			{
				this._Cuentas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Cuentas(Cuentas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Soft1.SociosV")]
	public partial class SociosV
	{
		
		private string _Socio;
		
		private string _Domicilio;
		
		private bool _Activo;
		
		private bool _BuroCredito;
		
		private string _RFC;
		
		private System.Guid _IdSocio;
		
		private int _NoUsuario;
		
		private string _Usuario;
		
		public SociosV()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Socio", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Socio
		{
			get
			{
				return this._Socio;
			}
			set
			{
				if ((this._Socio != value))
				{
					this._Socio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domicilio", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this._Domicilio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this._Activo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuroCredito", DbType="Bit NOT NULL")]
		public bool BuroCredito
		{
			get
			{
				return this._BuroCredito;
			}
			set
			{
				if ((this._BuroCredito != value))
				{
					this._BuroCredito = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this._RFC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					this._IdSocio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoUsuario", DbType="Int NOT NULL")]
		public int NoUsuario
		{
			get
			{
				return this._NoUsuario;
			}
			set
			{
				if ((this._NoUsuario != value))
				{
					this._NoUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this._Usuario = value;
				}
			}
		}
	}
	
	public partial class spCuentas_AperturaResult
	{
		
		private string _Column1;
		
		public spCuentas_AperturaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="VarChar(143)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
